name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t runstrong-api .
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Log in to DO Container Registry
      run: doctl registry login --expiry-seconds 600
    
    - name: Tag image
      run: docker tag runstrong-api registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/runstrong-api:latest
    
    - name: Push image to DO Container Registry
      run: docker push registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/runstrong-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to DigitalOcean droplet
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          cd /opt/runstrong-api
          git pull origin main
          docker-compose down
          docker-compose pull
          docker-compose up -d
          docker system prune -f